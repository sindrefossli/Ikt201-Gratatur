@using NorMall.Data
@using Microsoft.EntityFrameworkCore
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@model Business
@inject ApplicationDbContext db

@{
    ViewBag.Title = Model.Name;
    Layout = "_LayoutWide";
}

<div class="grid-container">
    <div class="category-search-grid">
        <div class="page-selector">
            @{
                var maxPage = ViewBag.MaxPage;

                if (ViewBag.CurrentPage > 1)
                {
                    <button class="btn btn-success" onclick="updatePageInLocalStorage(-1)">Prev</button>
                }
                else
                {
                    <button class="btn btn-danger">Prev</button>
                }
                <input type="number" id="pageNumberInput" class="text-center" min="1" max="@maxPage" value="@ViewBag.CurrentPage" onchange="setPageInLocalStorage(@ViewBag.MaxPage)"/>

                if (ViewBag.CurrentPage < maxPage)
                {
                    <button class="btn btn-success" onclick="updatePageInLocalStorage(1)">Next</button>
                }
                else
                {
                    <button class="btn btn-danger">Next</button>
                }
                <div style="margin-left: 8px">Page <br/>@ViewBag.CurrentPage / @maxPage</div>
            }
        </div>
        <div class="search-grid">
            <input type="text" maxlength="20" class="search-input" id="searchInput" placeholder="Search products..." onchange="handleSearch()">
            <a asp-action="BusinessFrontPage" asp-controller="Home" asp-route-businessId="@Model.Id">
                <button class="btn btn-success">Search</button>
            </a>
        </div>
        <div class="category-grid">
            @{
                var relevantCategories = db.Categories
                    .Where(c => c.Products.Any(p => p.BusinessId == Model.Id))
                    .ToList();
                if (relevantCategories.Count > 0)
                {
                    foreach (var category in relevantCategories.OrderBy(c => c.Name))
                    {
                        <div class="category-list-item">
                            <input type="checkbox" class="custom-checkbox" id="@category.Id" name="selectedCategories" value="@category.Name" onchange="updateSelectedCategories('@category.Name')">
                            <label for="@category.Id">@category.Name</label>
                        </div>
                    }
                }
                else
                {
                    <h2>No categories were found for the businesses products</h2>
                }
            }
        </div>
        <div class="row category-buttons">
            <input type="button" id="clearButton" class="btn btn-danger category-button" value="Clear all" onclick="clearAll()"/>
            <a class="btn btn-success category-button" asp-controller="Home" asp-action="BusinessFrontPage" asp-route-businessId="@Model.Id">Search</a>
        </div>
    </div>
    <div class="center-grid-container">
        <div class="row bannerContainer">
            @{
                var activeConfig = Model.HomePageConfig.FirstOrDefault(config => config.Active);
                var bannerImage = activeConfig?.Images.FirstOrDefault(image => image.EntityType == "Banner");
                var bannerImageId = bannerImage?.Id;


                if (bannerImageId != null)
                {
                    <img src="@Url.Action("GetImage", "Home", new { id = bannerImageId })" alt="Image" class="bannerImage">
                }
                else
                {
                    <img src="~/Images/defaultBanner.png" alt="Image" class="bannerImage">
                }
            }
        </div>
        <div class="row">

            @{
                if ((ViewBag.SearchString != null && ViewBag.SearchString.Length > 1) ||
                    (ViewBag.SelectedCategories != null && ViewBag.SelectedCategories[0].Length > 1))
                {
                    <h3>Displaying products fitting your requirements</h3>
                }
            }
        </div>

        <div class="container">
            <div class="row">
                @{
                    if (Model.Product.Count == 0)
                    {
                        <h2>The business currently has no Products to display.</h2>
                    }
                    foreach (var product in Model.Product.OrderByDescending(p => p.Id))
                    {
                        <div class="col-md-3 mb-3">
                            <a href="@Url.Action("Product", "Home", new { id = product.Id })" style="text-decoration: none; color: inherit;">
                                <div class="card h-100" style="overflow: hidden">
                                    @{
                                        var image = product.Images.FirstOrDefault(i => i.OrderIndex == 0);

                                        if (image != null)
                                        {
                                            <img src="@Url.Action("GetImage", "Home", new { id = image.Id })" alt="Image"/>
                                        }
                                        else
                                        {
                                            <img src="~/Images/missingProductImage.png" alt="Image"/>
                                        }
                                    }

                                    <div class="card-body">
                                        <h5 class="card-title">@product.Name</h5>
                                        <p class="card-text">@product.Price,-</p>
                                    </div>
                                </div>
                            </a>
                        </div>
                    }
                }
            </div>
        </div>

    </div>
    <div class="advert-grid">
        @{
            var advertImage = activeConfig?.Images.FirstOrDefault(image => image.EntityType == "Advert");
            var advertImageId = advertImage?.Id;


            if (bannerImageId != null)
            {
                <img src="@Url.Action("GetImage", "Home", new { id = advertImageId })" alt="Image" class="advertImage">
            }
            else
            {
                <img src="~/Images/defaultAdvertisement.jpg" alt="Image" class="advertImage">
            }
        }

    </div>
</div>