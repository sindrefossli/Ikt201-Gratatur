@model IEnumerable<Business>
@using NorMall.Data
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext db

@{
    ViewBag.Title = "NorMall";
    Layout = "_LayoutWide";
}

<div class="index-main">
    <div class="navigation-container-top">
        <div class="nav-item-top">
            <a href="@Url.Action("AboutUs", "Home")">About Us</a>
        </div>
        <div class="nav-item-top">
            <a href="@Url.Action("WhatWeDo", "Home")">What We Do</a>
        </div>
        <div class="nav-item-top">
            <a href="@Url.Action("BecomeBusinessOwner", "Customer")">Become Business Owner</a>
        </div>
        <div class="nav-item-top">
            <a href="@Url.Action("OurOffer", "Home")">Our Offer</a>
        </div>
    </div>

    <div class="grid-container">
        <div class="category-search-grid">
            <div class="page-selector">
                @{
                    var maxPage = ViewBag.MaxPage;

                    if (ViewBag.CurrentPage > 1)
                    {
                        <button class="btn btn-success" onclick="updatePageInLocalStorage(-1)">Prev</button>
                    }
                    else
                    {
                        <button class="btn btn-danger">Prev</button>
                    }
                    <input type="number" id="pageNumberInput" class="text-center" min="1" value="@ViewBag.CurrentPage" max="@maxPage" onchange="setPageInLocalStorage(@ViewBag.MaxPage)"/>

                    if (ViewBag.CurrentPage < maxPage)
                    {
                        <button class="btn btn-success" onclick="updatePageInLocalStorage(1)">Next</button>
                    }
                    else
                    {
                        <button class="btn btn-danger">Next</button>
                    }
                    <div style="margin-left: 8px">Page <br/>@ViewBag.CurrentPage / @maxPage</div>
                }
            </div>
            <div class="search-grid">
                <input type="text" maxlength="20" class="search-input" id="searchInput" placeholder="Search all products..." onchange="handleSearch()">
                <a asp-action="Index" asp-controller="Home">
                    <button class="btn btn-success">Search</button>
                </a>
            </div>
            <div class="category-grid">
                @{
                    var relevantCategories = db.Categories.ToList();
                    if (relevantCategories.Count > 0)
                    {
                        foreach (var category in relevantCategories.OrderBy(c => c.Name))
                        {
                            <div class="category-list-item">
                                <input type="checkbox" class="custom-checkbox" id="@category.Id" name="selectedCategories" value="@category.Name" onchange="updateSelectedCategories('@category.Name')">
                                <label for="@category.Id">@category.Name</label>
                            </div>
                        }
                    }
                    else
                    {
                        <h2>No categories were found for the businesses products</h2>
                    }
                }
            </div>
            <div class="row category-buttons">
                <input type="button" id="clearButton" class="btn btn-danger category-button" value="Clear all" onclick="clearAll()"/>
                <a class="btn btn-success category-button" asp-controller="Home" asp-action="Index">Search</a>
            </div>
        </div>
        <div class="center-grid-container">
            <div class="container mt-4">
                <div class="row" style="margin-top: 15vh">
                    @{
                        if ((ViewBag.SearchString != null && ViewBag.SearchString.Length > 1) ||
                            (ViewBag.SelectedCategories != null && ViewBag.SelectedCategories[0].Length > 1))
                        {
                            <h3 style="margin-top: 40px">Displaying businesses with products fitting your requirements</h3>
                        }

                        foreach (var business in Model)
                        {
                            <div class="col-md-4 mb-3">
                                <a id="shopLink" href="@Url.Action("BusinessFrontPage", "Home", new { businessId = business.Id })" style="text-decoration: none; color: inherit;">
                                    <div class="card" style="overflow: hidden">
                                        @{
                                            var activeConfig = business.HomePageConfig.FirstOrDefault(config => config.Active);
                                            var bannerImage = activeConfig?.Images.FirstOrDefault(image => image.EntityType == "Banner");
                                        }
                                        <div class="card-image">
                                            @{
                                                if (bannerImage != null)
                                                {
                                                    <img src="@Url.Action("GetImage", "Home", new { id = bannerImage.Id })" alt="Image" class="bannerImage"/>
                                                }
                                                else
                                                {
                                                    <img src="~/Images/defaultBanner.png" alt="Image" class="bannerImage"/>
                                                }
                                            }
                                        </div>

                                        <div class="card-body">
                                            <h5 class="card-title">@business.Name</h5>
                                            <!-- If you have more properties on business you want to display, you can add them here similar to the product properties. -->
                                        </div>
                                    </div>
                                </a>
                            </div>
                        }
                    }
                </div>
            </div>
            <div class="custom-container"></div>
        </div>
    </div>
</div>