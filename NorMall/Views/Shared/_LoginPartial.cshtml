@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
        var user = await UserManager.GetUserAsync(User);
        if (user != null)
        {
            if (await UserManager.IsInRoleAsync(user, "BusinessOwner"))
            {
                <a asp-controller="Business" asp-action="BusinessDetails" style="text-decoration: none">
                        <img src="~/Images/ShopDetailsIcon.png" alt="Image" class="navbar-details-button">
                </a>
            }
            else if (await UserManager.IsInRoleAsync(user, "Customer"))
            {
                <a asp-controller="Customer" asp-action="AccountDetails" style="text-decoration: none">
                    <img src="~/Images/AccountDetailsButtonImage.png" alt="Image" class="navbar-details-button">
                </a>
            }
        }
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>